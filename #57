import math as m
def is3power(n):
    while n%3==0:
        n//=3
    if n>1:
        return False
    return True

def binpow(a,b):
    res=1
    while b>0:
        if b&1:
            res=(res*a)
            while res>9999:
                q=str(res)
                res=int(q[len(q)-4::])
        a=(a*a)
        while a>9999:
            p=str(a)
            a=int(p[len(p)-4::])
        b>>=1
    return res


a={"0003":[1,[1]],"0009":[1,[2]],"0027":[1,[3]],"0081":[1,[4]],"0243":[1,[5]],"0729":[1,[6]]}
i=7
while True:
    p=str(binpow(3,i))
    if p in a:
        a[p][0]+=1
        a[p][1].append(i)
        if a[p][0]==3 and a[p][1][0]+a[p][1][1]>a[p][1][2]:
            print(*a[p][1])
            break
    else:
        a[p]=[1,[i]]
    i+=1

'''The numbers comes out to be 501 1001 1501 and so perimeter becomes 3003'''
